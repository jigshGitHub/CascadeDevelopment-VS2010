@{
    ViewBag.Title = "View Edit People";
}

@Scripts.Render("~/bundles/jquery")

<h2>View/Edit People:</h2>
 
    <div id="divViewEditPeople">
                
        <table class="originaltable">
        <tr class="dummyitem">
            <td colspan="2"></td>
        </tr>
        <tr>
            <td>First Name:
            </td>
            <td>
                <input id="FirstName" type="text" data-bind="value:FirstName"/>
                <span data-bind="text:FirstNameRequired, visible:FirstNameRequiredHasError" style="color: Red"></span>
            </td>
        </tr>
        <tr>
            <td>Last Name:
            </td>
            <td>
                <input id="LastName" type="text" data-bind="value:LastName"/>
                <span data-bind="text:LastNameRequired, visible:LastNameRequiredHasError" style="color: Red"></span>
            </td>
        </tr>
            <tr>
            <td>Address:
            </td>
            <td>
                <input id="Address" type="text" data-bind="value:Address"/>
                
            </td>
        </tr>
        <tr>
            <td colspan="2" class="confirmBtnContainer">
                <input type="button" id="saveEditBtn" title="Save" data-bind="click:save"/>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <div id="resultSummary" style="color: Red">
                    <ul>
                    </ul>
                </div>
            </td>
        </tr>
         @*Hidden filed for the Record Id*@
        <tr><td>@Html.Hidden("Id",(string)(@ViewBag.Id))</td></tr>
    </table>
        
        <table class="dummyitem"></table>
       
    </div>

@Scripts.Render("~/bundles/knockout")

@section scripts{
    <script src="~/Scripts/jquery-ui-1.8.11.js" type="text/javascript"></script>
    <script type="text/javascript">

        //Client side View Model
        function peopleViewEditVM() {

            var href = window.location.href.split('/');
            var baseUrl = href[0] + '//' + href[2] + '/' + href[3];
            
            var self = this;
            //Form
            self.FirstName = ko.observable('');
            self.LastName = ko.observable('');
            self.Address = ko.observable('');

            //For validation Messages
            self.FirstNameRequired = ko.observable('');
            self.FirstNameRequiredHasError = ko.observable(false);

            self.LastNameRequired = ko.observable('');
            self.LastNameRequiredHasError = ko.observable(false);

            self.validationErrors = ko.observableArray([]);
                                    
            //This is used to format Date from Json response - We get date like this from Json "\/Date(1283219926108)\/"
            function JSONDate(dateStr) {
                if (dateStr != null) {
                    var m, day;
                    jsonDate = dateStr;
                    var d = new Date(parseInt(jsonDate.substr(6)));
                    m = d.getMonth() + 1;
                    if (m < 10)
                        m = '0' + m
                    if (d.getDate() < 10)
                        day = '0' + d.getDate()
                    else
                        day = d.getDate();
                    return (m + '/' + day + '/' + d.getFullYear())
                }
                else {
                    return ''
                }
            }
            //For Date with Time
            function JSONDateWithTime(dateStr) {
                if (dateStr != null) {
                    jsonDate = dateStr;
                    var d = new Date(parseInt(jsonDate.substr(6)));
                    var m, day;
                    m = d.getMonth() + 1;
                    if (m < 10)
                        m = '0' + m
                    if (d.getDate() < 10)
                        day = '0' + d.getDate()
                    else
                        day = d.getDate();
                    var formattedDate = m + "/" + day + "/" + d.getFullYear();
                    var hours = (d.getHours() < 10) ? "0" + d.getHours() : d.getHours();
                    var minutes = (d.getMinutes() < 10) ? "0" + d.getMinutes() : d.getMinutes();
                    var formattedTime = hours + ":" + minutes + ":" + d.getSeconds();
                    formattedDate = formattedDate + " " + formattedTime;
                    return formattedDate;
                }
                else {
                    return ''
                }
            }

            //For Page Data
            $.ajax({
                url: baseUrl + '/Home/GetPeopleData/',
                type: 'GET',
                contentType: 'application/json',
                data: { id: $('#Id').val() },
                dataType: 'json',
                success: function (data) {
                    //Set Selected options                     
                    self.FirstName(data.FName);
                    self.LastName(data.LName);
                    self.Address(data.Address);
                },
                error: function (xhr, status, somthing) {
                    log(status);
                }
            });

            //Button Click Save
            self.save = function () {
                
                self.validationErrors([]);

                $('#resultSummary ul').empty();

                //First Name
                if (self.FirstName() == '') {
                    self.FirstNameRequired('First Name is required.');
                    self.validationErrors.push(self.FirstNameRequired());
                }

                //Last Name
                if (self.LastName() == '') {
                    self.LastNameRequired('Last Name is required.');
                    self.validationErrors.push(self.LastNameRequired());
                }

                //Go ahaead if there are no Errors
                if (self.validationErrors() == '') {
                    
                    var json = JSON.stringify({
                        PID: $('#Id').val(),
                        FName: self.FirstName(),
                        LName: self.LastName(),
                        Address: self.Address()

                    });

                    $.ajax({
                        url: baseUrl + "/Home/Add/",
                        type: "POST",
                        data: json,
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (response) {
                            //log(response.ID);
                            //alert("success");
                            $('#resultSummary ul').append('<li>People Record updated successfully.</li>');
                            $('#saveEditBtn').hide();
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                            console.log(textStatus, errorThrown);
                            $('#resultSummary ul').append('<li>We have some issue processing your request. Please try again later.</li>');
                        }
                    });

                }
                else {
                    $.each(self.validationErrors(), function (i, item) {
                        log(item);
                        $('#resultSummary ul').append('<li>' + item + '</li>');
                    });
                }
                   
                               
            };

        };

        $(document).ready(function () {
            //Knockout Bindings
            ko.applyBindings(new peopleViewEditVM(), $('#divViewEditPeople')[0]);
                        
        });

     </script>
}
